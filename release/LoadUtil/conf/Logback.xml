<?xml version="1.0" encoding="GBK"?>
<configuration debug="false" scan="true" scanPeriod="60 seconds">
	<property name="CHARSET" value="gbk" /><!-- 字符集 -->
	<property name="LOG_HOME" value="log" /><!-- log目录 -->
	<property name="BACKUP" value="${LOG_HOME}/BACKUP/%d{yyyy-MM-dd}" /><!-- 日志备份目录 -->
	<property name="PATTERN_DEF" value="[%d{yyyy-MM-dd HH:mm:ss SSS}] [%thread] [%-5p] [%c:%L] - %m%n" /><!-- 日志输出格式, %c{0} 表示打印logger名，若logger名是一个类路径，则打印最后一个.右边的部分 -->

	<!-- 控制台日志器 -->
	<appender name="console" class="ch.qos.logback.core.ConsoleAppender">
		<encoder>
			<charset>${CHARSET}</charset>
			<pattern>${PATTERN_DEF}</pattern>
		</encoder>
		<target>System.out</target>
	</appender>

	<!-- 全量日志器  -->
	<appender name="all" 
		class="ch.qos.logback.core.rolling.RollingFileAppender">
		<prudent>false</prudent> <!-- 如果是 true，日志会被安全的写入文件（多线程同步），但效率低，默认是 false。 -->
		<file>${LOG_HOME}/log.log</file> <!-- 可以是相对目录，也可以是绝对目录，如果上级目录不存在会自动创建 -->
		<rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
			<fileNamePattern>${BACKUP}/log_%d{yyyy-MM-dd}-%i.log.zip</fileNamePattern>
			<maxHistory>7</maxHistory>
			<timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
				<maxFileSize>512MB</maxFileSize>
			</timeBasedFileNamingAndTriggeringPolicy>
		</rollingPolicy>
		<encoder>
			<charset>${CHARSET}</charset>
			<pattern>${PATTERN_DEF}</pattern>
		</encoder>
	</appender>
	
	<!-- 所有由数据引起的异常或者数据库等异常的信息放到该日志文件中-->
	<appender name="exception" 
		class="ch.qos.logback.core.rolling.RollingFileAppender">
		<prudent>false</prudent> <!-- 如果是 true，日志会被安全的写入文件（多线程同步），但效率低，默认是 false。 -->
		<file>${LOG_HOME}/exception.log</file> <!-- 可以是相对目录，也可以是绝对目录，如果上级目录不存在会自动创建 -->
		<rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
			<fileNamePattern>${BACKUP}/exception_%d{yyyy-MM-dd}-%i.log.zip</fileNamePattern>
			<maxHistory>7</maxHistory>
			<timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
				<maxFileSize>512MB</maxFileSize>
			</timeBasedFileNamingAndTriggeringPolicy>
		</rollingPolicy>
		<encoder>
			<charset>${CHARSET}</charset>
			<pattern>${PATTERN_DEF}</pattern>
		</encoder>
		<filter class="ch.qos.logback.classic.filter.LevelFilter">
			<level>ERROR</level>
			<onMatch>ACCEPT</onMatch>
			<onMismatch>DENY</onMismatch>
		</filter>
	</appender>
    
	<root level="info">
		<appender-ref ref="console" />
		<appender-ref ref="all" />
	</root>
</configuration>